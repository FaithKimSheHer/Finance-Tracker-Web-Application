<div id="expenditures" class="category">
  <form action="/" method="GET" class="back">
    <input type="submit" value="<      " />
  </form>
  <div class="cat-body">
    <canvas id="myChart" style="border: 1px solid black;"></canvas>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"
    ></script>
    <script>
      const transactions = {{{json transactions
      }}};

      const transactionsByMonthYear = transactions.reduce((acc, transaction) => {
        const [month, day, year] = transaction.dateOfTransaction.split('/');
        const key = `${month}-${year}`;
        const amount = Number(transaction.amount);
        if (!acc[key]) {
          acc[key] = 0;
        }
        acc[key] += amount;
        return acc;
      }, {});

      const sortedKeys = Object.keys(transactionsByMonthYear).sort((a, b) => {
        const [aMonth, aYear] = a.split('-');
        const [bMonth, bYear] = b.split('-');
        return (aYear - bYear) || (aMonth - bMonth);
      });

      const last5Keys = sortedKeys.slice(-5);

      const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
      const monthYearLabels = last5Keys.map(key => {
        const [month, year] = key.split('-');
        return `${monthNames[month - 1]} ${year}`;
      });
      const amounts = last5Keys.map(key => transactionsByMonthYear[key]);

      const ctx = document.getElementById('myChart').getContext('2d');
      const myChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: monthYearLabels,
          datasets: [{
            label: 'Expenditures by Month',
            data: amounts,
            backgroundColor: 'rgba(255, 99, 132, 0.2)', //pink
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1
          }]
        },
        options: {
          plugins: {
            title: {
              display: true,
              text: "Last 5 month's transactions",
              fontSize: 20
            },
            datalabels: {
              anchor: 'end',
              align: 'top',
              font: {
                size: 16,
                weight: 'bold'
              },
              formatter: function(value, context) {
              return '$' + value.toFixed(2);
              }
            }
          },
          scales: {
            yAxes: [{
              ticks: {
                min: 0 
              }
            }]
          }
        }
      });
    </script>
    <p>
      As of {{user.currentTime}}
    </p>
    {{#each transactions}}
      <article class="expenditures">
        <ul>
          <li>
            Amount ${{amount}}, {{dateOfTransaction}}, {{userComments}}
          </li>
        </ul>
      </article>
    {{/each}}
  </div>
</div>