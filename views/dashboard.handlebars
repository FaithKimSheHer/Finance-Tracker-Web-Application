<!DOCTYPE>
<html>

<head>
</head>

<body>
   <div id="dashboard">
      <main>
         <input type="text" value="{{title}}" hidden id="headerValue">
         <input type="text" value="{{piechartdata}}" hidden id="piedata">
         <canvas id="chartId" aria-label="chart" height="450" width="580"></canvas>
         {{!-- bar chart --}}
         {{!-- <input type="text" value="{{title}}" hidden id="headerValue"> --}}
         <input type="text" value="{{barchartdata}}" hidden id="bardata">
         <canvas id="barChartId" aria-label="bar-chart" height="450" width="580"></canvas>

         <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.1.1/chart.min.js"></script>
         <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation@1.0.2"></script>

         <script>
            var chrt = document.getElementById("chartId").getContext("2d");
            var header = document.getElementById("headerValue").value;
            //pie data should be a list of objects which have all 5 categories
            var piedata = document.getElementById("piedata").value.split(',').map(Number);;


            var chartId = new Chart(chrt, {
               type: 'pie',
               data: {
                  labels: ['Income', 'Savings', 'Expenditure', 'Retirement', 'Investment'],
                  datasets: [{
                     label: "online tutorial subjects",
                     data: piedata,
                     backgroundColor: ['orange', 'aqua', 'pink', 'lightgreen', 'gold', 'lightblue'],
                     hoverOffset: 5
                  }],
               },
               options: {
                  responsive: false,
                  plugins: {
                     legend: {
                        display: true
                     },
                     title: {
                        display: true,
                        text: header
                     }
                  }
               },
            });

            //!-- bar chart --
            var barChartCtx = document.getElementById("barChartId").getContext("2d");
            var bardata = document.getElementById("bardata").value.split(',').map(Number);;

            //Get list of months for the last 12 months
            const monthNamesShort = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            let currentMonth = new Date().getMonth();  // 0 (January) through 11 (December)
            let currentYear = new Date().getFullYear();

            const months = [];
            for (let i = 0; i < 12; i++) {
               months.unshift(`${monthNamesShort[currentMonth]}.${currentYear}`);
               currentMonth -= 1;
               if (currentMonth < 0) {
                  currentMonth = 11;  // Reset to December
                  currentYear -= 1;  // Decrease year
               }
            }

            //TODO: get data from database, passed through handlebars with {{barchartdata}}
            //unpack barchart data into 5 arrays
            const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September",
               "October", "November", "December"];
            const barData = bardata;
            /*
            var incomeData = [];
            var savingsData = [];
            var expenditureData = [];
            var retirementData = [];
            var investmentData = [];
            
            for (let i = 0; i < 12; i++) {
               const temp = barData[i];
               incomeData.push(temp[income]);
               savingsData.push(temp[savings]);
               expenditureData.push(temp[expenditure]);
               retirementData.push(temp[retirement]);
               investmentData.push(temp[investment]]);
            }
            
            
            //each array should have 12 items, one for each month
            for (let i = 0; i < 12; i++) {
               incomeData.push(barData[i]);
               savingsData.push(barData[i + 12]);
               expenditureData.push(barData[i + 24]);
               retirementData.push(barData[i + 36]);
               investmentData.push(barData[i + 48]);
            }
            */

            /*
            */
            const incomeData = [20, 25, 35, 40, 45];
            const savingsData = [15, 20, 30, 35, 40];
            const expenditureData = [-10, -15, -25, -30, -35];
            const retirementData = [5, 10, 15, 20, 25];
            const investmentData = [1, 5, 10, 15, 20];


            const netWorthData = [];
            for (let i = 0; i < 12; i++) {
               netWorthData.push(incomeData[i] + savingsData[i] + expenditureData[i] + retirementData[i] + investmentData[i]);
            }

            //only use the latest 12 months from this list (last 12 items)
            var barChartData = {
               //labels for the bar chart should consist of month and year in this format: "January 2021"
               //labels: ['January 2021', 'February 2021', 'March 2021', 'April 2021', 'May 2021'], // example months
               //just do the 12 latest months, unless less months than 12 then just do the months that are available

               labels: months,
               //labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'November', 'December'], // example months
               datasets: [
                  {
                     label: 'Income',
                     data: incomeData,
                     backgroundColor: 'rgba(50, 205, 50, 1)' // Green
                  },
                  {
                     label: 'Savings',
                     data: savingsData,
                     backgroundColor: 'rgba(54, 162, 235, 0.9)' // Blue
                  },
                  {
                     label: 'Expenditure',
                     data: expenditureData,
                     backgroundColor: 'rgba(220, 20, 60, 1)' // Red
                  },
                  {
                     label: 'Retirement',
                     data: retirementData,
                     backgroundColor: 'rgba(153, 102, 255, 0.9)' // Purple
                  },
                  {
                     label: 'Investment',
                     data: investmentData,
                     //backgroundColor: 'rgba(255, 255, 0, 0.9)' // Orange
                     backgroundColor: 'orange'
                  },
                  {
                     label: 'Net Worth',
                     data: netWorthData,
                     type: 'line',
                     fill: false,
                     borderColor: 'rgba(0,0,0,0.5)', // Black with 50% opacity
                     borderWidth: 4,
                     pointBackgroundColor: 'rgba(0,0,0,0.5)',
                     pointBorderColor: 'rgba(0,0,0,0.5)',
                     pointHoverBackgroundColor: 'rgba(0,0,0,0.75)',
                     pointHoverBorderColor: 'rgba(0,0,0,0.75)'
                  }
               ]
            };

            //Overlay a 50% opacity linegraph on top of the bar chart to show the net worth over time??
            //^ this is not necessary, but would be nice to have

            //TODO: add numbers to the top of each bar representing the total net worth that someone has
            //var netWorth = barChartData.reduce(function (acc, barChartData) {
            //   return acc.map(function (value, index) {
            //      return value + barChartData.data[index];
            //   });
            //}, new Array(barChartData[0].data.length).fill(0));




            var barChart = new Chart(barChartCtx, {
               type: 'bar',
               data: barChartData,
               options: {
                  responsive: false,

                  plugins: {

                     annotation: {
                        annotations: {
                           line1: {
                              type: 'line',
                              yMin: 0,
                              yMax: 0,
                              borderColor: 'black',
                              borderWidth: 5,
                              label: {
                                 enabled: false,
                                 content: 'y=0'
                              }
                           }
                        }
                     },

                     legend: {
                        display: true
                     },
                     title: {
                        display: true,
                        text: 'Portfolio by Month (past 12 months)'
                     },


                  },
                  scales: {
                     x: {
                        stacked: true,
                     },
                     y: {
                        //{{!-- beginAtZero: true --}}
                        stacked: true,
                        beginAtZero: true,
                        title: {
                           display: true,
                           text: 'Cash Flow (+/-) & Assets Breakdown',
                           color: '#000',
                           font: {
                              size: 16
                           }
                        }
                     }
                  }
               }
            });

         </script>
      </main>
      <br />
      <br />

      {{!-- write a note under bar graph here, that only shows up if true is passed through handlebars --}}
      {{!-- {{#if isTrue
      <div id="note">
         <h3>Notes:</h3>
         <p>It is advised that you diversify your Portfolio.
            Percentage of {{Retirement}} is below 10% of your total portfolio. It should be at least 10%.
            Percentage of {{category1}} is {{percentage1}}% of your total portfolio.
            Recommendation is as follows:
            Move {{percentage1}}% of your {{category1}} to {{category2}}.

            Percentage of {{savings}} is too high. Consider moving some of your savings to {{category2}}.


            }} --}}
            {{!--
         <div id="note">
            <h3>Notes:</h3>
            <p>1. The bar graph shows the total amount of money you have in each category for each month.</p>
            <p>2. The pie chart shows the total amount of money you have in each category.</p>
            <p>3. The monthly status shows the total amount of money you have in each category for the current month.
            </p>


            <label>Monthly Status:</label><label id="{{monthlyStatus}}">{{{monthlyStatus}}}</label>
         </div> --}}
      </div>
</body>

</html>