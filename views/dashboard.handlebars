<!DOCTYPE>
<html>

<head>
</head>

<body>
   <div id="dashboard">
      <main>
         <input type="text" value="{{title}}" hidden id="headerValue">
         <input type="text" value="{{piechartdata}}" hidden id="piedata">

         {{!-- bar chart information --}}
         <input type="text" value="{{incomeData}}" hidden id="incomeData">
         <input type="text" value="{{savingsData}}" hidden id="savingsData">
         <input type="text" value="{{expenditureData}}" hidden id="expenditureData">
         <input type="text" value="{{retirementData}}" hidden id="retirementData">
         <input type="text" value="{{investmentData}}" hidden id="investmentData">

         <canvas id="chartId" aria-label="chart" height="450" width="580"></canvas>
         {{!-- bar chart --}}
         {{!-- <input type="text" value="{{title}}" hidden id="headerValue"> --}}
         <input type="text" value="{{barchartdata}}" hidden id="bardata">
         <canvas id="barChartId" aria-label="bar-chart" height="450" width="580"></canvas>

         <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.1.1/chart.min.js"></script>
         <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation@1.0.2"></script>

         <script>
            var chrt = document.getElementById("chartId").getContext("2d");
            var header = document.getElementById("headerValue").value;
            //pie data should be a list of objects which have all 5 categories
            var piedata = document.getElementById("piedata").value.split(',').map(Number);;

            //!-- pie chart --
            var chartId = new Chart(chrt, {
               type: 'pie',
               data: {
                  labels: ['Income', 'Savings', 'Expenditure', 'Retirement', 'Investment'],
                  datasets: [{
                     label: "online tutorial subjects",
                     data: piedata,
                     //backgroundColor: ['orange', 'aqua', 'pink', 'lightgreen', 'gold', 'lightblue'],
                     backgroundColor: ['rgba(50, 205, 50, 1)', 'rgba(54, 162, 235, 0.9)', 'rgba(220, 20, 60, 1)', 'rgba(153, 102, 255, 0.9)', 'orange'],
                     hoverOffset: 5
                  }],
               },
               options: {
                  responsive: false,
                  plugins: {
                     legend: {
                        display: true
                     },
                     title: {
                        display: true,
                        text: header
                     }
                  }
               },
            });
            ////////////////////////////////////////////////

            //!-- bar chart --
            var barChartCtx = document.getElementById("barChartId").getContext("2d");

            ///Fetch data from each 5 categories from handlebars
            
            //const test = document.getElementById("incomeData").value.split(',').map(Number);;
            //
            //var incomeData = document.getElementById("incomeData").value.split(',').map(Number);;
            /*
            */
            let incomeData = document.getElementById("incomeData").value.split(',').map(Number);;
            let savingsData = document.getElementById("savingsData").value.split(',').map(Number);;
            let expenditureData = document.getElementById("expenditureData").value.split(',').map(Number);;
            let retirementData = document.getElementById("retirementData").value.split(',').map(Number);;
            let investmentData = document.getElementById("investmentData").value.split(',').map(Number);;

            //var bardata = document.getElementById("bardata").value.split(',').map(Number);;
            //var bardata = document.getElementById("bardata");;

            //Get list of months for the last 12 months
            const monthNames = ["January", "Feburary", "March", "April", "May", "June", 
                                 "July", "August", "September", "October", "November", "December"]; // Array of month names
            const monthNamesShort = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            let currentMonth = new Date().getMonth();  // 0 (January) through 11 (December)
            let currentYear = new Date().getFullYear();

            //Make two lists, one with month abbreviated and year, one with month full name and year (to use to get data)
            const months = [];
            //const monthsFull = [];
            //const yearFull = [];
            for (let i = 0; i < 12; i++) {
               months.unshift(`${monthNamesShort[currentMonth]}.${currentYear}`);
               //monthsFull.unshift(`${monthNames[currentMonth]}`);
               //yearFull.unshift(`${currentYear}`);
               currentMonth -= 1;
               if (currentMonth < 0) {
                  currentMonth = 11;  // Reset to December
                  currentYear -= 1;  // Decrease year
               }
            }
            


               /*
               incomeData = [20, 25, 35, 40, 45];
               savingsData = [15, 20, 30, 35, 40];
               expenditureData = [-10, -15, -25, -30, -35];
               retirementData = [5, 10, 15, 20, 25];
               investmentData = [1, 5, 10, 15, 20];
               */

               //calculate net worth over each month
               const netWorthData = [];
               for (let i = 0; i < 12; i++) {
                  netWorthData.push(incomeData[i] + savingsData[i] - expenditureData[i] + retirementData[i] + investmentData[i]);
               }

               //take expense data and make every number in the array negative
               const negativeExpenditureData = [];
               for (let i = 0; i < 12; i++) {
                  negativeExpenditureData.push(-expenditureData[i]);
               }

               //note: the bar graph should be the data from the whole month. total up all the transactions for each category for each month and display that
               //note: the pie chart should be the data from the current month. total up all the transactions for each category for the current month and display that

               //only use the latest 12 months from this list (last 12 items)
               var barChartData = {
                  //labels for the bar chart should consist of month and year in this format: "January 2021"
                  //labels: ['January 2021', 'February 2021', 'March 2021', 'April 2021', 'May 2021'], // example months
                  //just do the 12 latest months, unless less months than 12 then just do the months that are available

                  labels: months,
                  //labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'November', 'December'], // example months
                  datasets: [
                     {
                        label: 'Income',
                        data: incomeData,
                        backgroundColor: 'rgba(50, 205, 50, 0.9)' // Green
                     },
                     {
                        label: 'Savings',
                        data: savingsData,
                        backgroundColor: 'rgba(54, 162, 235, 0.9)' // Blue
                     },
                     {
                        label: 'Expenditure',
                        data: negativeExpenditureData,
                        backgroundColor: 'rgba(220, 20, 60, 0.9)' // Red
                     },
                     {
                        label: 'Retirement',
                        data: retirementData,
                        backgroundColor: 'rgba(153, 102, 255, 0.9)' // Purple
                     },
                     {
                        label: 'Investment',
                        data: investmentData,
                        //backgroundColor: 'rgba(255, 255, 0, 0.9)' // Orange
                        backgroundColor: 'orange'
                     },
                     {
                        label: 'Net Cash Flow',
                        data: netWorthData,
                        type: 'line',
                        fill: false,
                        borderColor: 'rgba(0,0,0,1)', // Black with 50% opacity
                        borderWidth: 4,
                        pointBackgroundColor: 'rgba(0,0,0,1)',
                        pointBorderColor: 'rgba(0,0,0,1)',
                        pointHoverBackgroundColor: 'rgba(0,0,0,0.75)',
                        pointHoverBorderColor: 'rgba(0,0,0,0.75)'
                     }
                  ]
               };



               var barChart = new Chart(barChartCtx, {
                  type: 'bar',
                  data: barChartData,
                  options: {
                     responsive: false,

                     plugins: {

                        annotation: {
                           annotations: {
                              line1: {
                                 type: 'line',
                                 yMin: 0,
                                 yMax: 0,
                                 borderColor: 'black',
                                 borderWidth: 5,
                                 label: {
                                    enabled: false,
                                    content: 'y=0'
                                 }
                              }
                           }
                        },

                        legend: {
                           display: true
                        },
                        title: {
                           display: true,
                           text: 'Portfolio by Month (past 12 months)'
                        },


                     },
                     scales: {
                        x: {
                           stacked: true,
                        },
                        y: {
                           //{{!-- beginAtZero: true --}}
                           stacked: true,
                           beginAtZero: true,
                           title: {
                              display: true,
                              text: 'Cash Flow (+/-) & Assets Breakdown',
                              color: '#000',
                              font: {
                                 size: 16
                              }
                           }
                        }
                     }
                  }
               });

         </script>

         {{!-- for testing purposes --}}
         {{!-- <div id="test">
            <h1>income string:</h1>
            <h1>{{expenditureData}}</h1>
         </div> --}}

      </main>
      <br />
      <br />

      {{!-- write a note under bar graph here, that only shows up if true is passed through handlebars --}}
      {{!-- {{#if isTrue
      <div id="note">
         <h3>Notes:</h3>
         <p>It is advised that you diversify your Portfolio.
            Percentage of {{Retirement}} is below 10% of your total portfolio. It should be at least 10%.
            Percentage of {{category1}} is {{percentage1}}% of your total portfolio.
            Recommendation is as follows:
            Move {{percentage1}}% of your {{category1}} to {{category2}}.

            Percentage of {{savings}} is too high. Consider moving some of your savings to {{category2}}.


            }} --}}
            {{!--
         <div id="note">
            <h3>Notes:</h3>
            <p>1. The bar graph shows the total amount of money you have in each category for each month.</p>
            <p>2. The pie chart shows the total amount of money you have in each category.</p>
            <p>3. The monthly status shows the total amount of money you have in each category for the current month.
            </p>


         </div> --}}
         <label>Monthly Status:</label><label id="{{monthlyStatus}}"> {{{monthlyStatus}}}</label>

         {{#if suggestions.length}}
         <div id="suggestions">
            <h3>Financial Suggestions:</h3>
            {{#each suggestions}}
            <p>{{this}}</p>
            {{/each}}
         </div>
         {{/if}}
      </div>
</body>

</html>